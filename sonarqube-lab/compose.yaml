version: '3'
services:
  
  redis-server:
    image: 'redis'
    networks:
      - sonarnet
  node-app:
    build:
      context: ./node-app
      dockerfile: Dockerfile
    ports:
      - "8080:8081"
    networks:
      - sonarnet
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    networks:
      - sonarnet
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
  
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - sonarnet
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  
  # sonarscanner:
  #   container_name: sonarscanner
  #   image: newtmitch/sonar-scanner

  #   depends_on:
  #     - db
  #   environment:
  #     SONAR_HOST_URL: "http://localhost:9000"
  #     SONAR_SCANNER_OPTS: "-Dsonar.projectKey=node-app"
  #     SONAR_TOKEN: "sqp_4f9484a36e25a1e1fd55fa9d273d75fbbd399b38"
      
  #   networks:
  #     - sonarnet
  #   volumes:
  #     - ./node-app:/usr/src

networks:
  sonarnet:

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: